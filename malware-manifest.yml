# Manifest file for malware data collection
---
# version is for the format of this file, not its contents.
version: 0
content_type: application/vnd.redhat.malware.results+tgz

malware_options:
    # Location from which to download the yara rules
    rules_location: https://cert.console.redhat.com/api/malware-detection/v1/signatures.yar

    # Perform a filesystem scan?
    scan_filesystem: true

    # Perform a scan of the running processes?
    scan_processes: false

    # Add extra metadata to each scan match, eg file type, file md5sum, matching line numbers, process name
    add_metadata: false

    # Perform a simple test scan of the malware process to verify scanning is working correctly
    test_scan: false

    # scan_only takes a single directory, file or PID to scan, for example:
    # scan_only: /tmp  ... to scan only files in /tmp
    # No value means scan all files/directories/PIDs
    scan_only:

    # scan_recent takes an integer as the number of days ago to scan files recently modified, for example:
    # scan_recent: 1  ... scan files created/modified up to 1 day ago
    # No value means scan all files regardless of creation/modification date
    scan_recent:

    # Specific location of the yara binary file.  Autodetected if not specified.  Example: /usr/local/bin/yara
    yara_binary:

    # Abort a particular scan if it takes longer than scan_timeout seconds.  Default is 3600 seconds (1 hour)
    scan_timeout: # 3600

    # Run the yara process with this nice priority value.  Default is 19 (lowest priority)
    nice_value: # 19

    # The max number of CPUs threads used by yara when scanning.  Autodetected, but default is 2
    cpu_thread_limit: # 2

client:
    context:
        class: insights.core.context.HostContext
        args:
            timeout: 10 # timeout in seconds for commands. Doesn't apply to files.

    blacklist:
        files: []
        commands: []
        patterns: []
        keywords: []

    persist:
      # determines what will appear in the archive
        - name: insights.specs.malware.MalwareSpecs
          enabled: true

    run_strategy:
        name: serial
        args:
            max_workers: null

plugins:
    # disable everything by default
    # defaults to false if not specified.
    default_component_enabled: false
    packages:
      # determines which packages are loaded. These will be namespaced to the relevant collector
        - insights.specs.malware
    configs:
        # determines which specs get loaded
        - name: insights.specs.malware.MalwareSpecs
          enabled: true
